name: polygonid_flutter_sdk
description: PolygonID Flutter SDK (https://polygon.technology/polygon-id). This plugin provides a cross-platform tool (iOS, Android) to integrate the PolygonID solution.
version: 2.2.8+1
homepage: https://polygon.technology/polygon-id
repository: https://github.com/0xPolygonID/polygonid-flutter-sdk
issue_tracker: https://github.com/0xPolygonID/polygonid-flutter-sdk/issues
documentation: https://0xpolygonid.github.io/tutorials/

environment:
  sdk: ">=2.17.0 <4.0.0"
  flutter: ">=1.20.0"

dependencies:
  flutter:
    sdk: flutter
  http: ^0.13.6
  ffi: ^2.1.0
  hex: ^0.2.0
  web3dart: ^2.5.1
  web_socket_channel: ^2.2.0
  ffigen: ^8.0.2
  json_annotation: ^4.6.0
  equatable: ^2.0.3
  crypto: ^3.0.1
  get_it: ^7.2.0
  injectable: ^2.1.2
  # Path provider 2.0.12 is giving problems with iOS, forced to use 2.0.11
  path_provider: ^2.0.15
  archive: ^3.3.7
  sembast: 3.5.0+1
  fast_base58: 0.2.1
  uuid: ^3.0.6
  encrypt: 5.0.3
  pointycastle: 3.7.3
  package_info_plus: ^4.0.1
  bip32: ^2.0.0
  dio: ^5.3.0
  dio_cache_interceptor: ^3.4.2
  dio_cache_interceptor_hive_store: ^3.2.1
  logger: ^2.0.1
  intl: ^0.18.1
  hive: ^2.2.3
  hive_flutter: ^1.1.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.3
  json_serializable: ^6.7.1
  mockito: ^5.3.2
  injectable_generator: ^2.4.0
  build_runner: ^2.4.6

ffigen:
  name: NativePolygonIdCoreLib
  description: Bindings to `ios/Classes/libpolygonid.h`.
  output: 'lib/common/libs/polygonidcore/native_polygonidcore.dart'
  headers:
    entry-points:
      - 'ios/Classes/libpolygonid.h'

        # name: WitnessMtpLib
        # description: Bindings to `ios/Classes/witnesscalc_credentialAtomicQueryMTPV2.h`.
        # output: 'lib/proof/libs/mtp_v2/native_witness_mtp_v2.dart'
        # headers:
        #  entry-points:
        #    - 'ios/Classes/witnesscalc_mtp.h'

        # name: WitnessLib
        # description: Bindings to `ios/Classes/witnesscalc.h`.
        # output: 'lib/libs/generated_bindings_witness.dart'
        # headers:
        #  entry-points:
        #   - 'ios/Classes/witnesscalc.h'

  #name: NativeWitnessMtpOnchainLib
  #description: Bindings to `ios/Classes/witnesscalc_credentialAtomicQueryMTPV2OnChain.h`.
  #output: 'lib/proof/libs/witnesscalc/mtp_v2_onchain/native_witness_mtp_v2_onchain.dart'
  #headers:
  #  entry-points:
  #    - 'ios/Classes/witnesscalc_credentialAtomicQueryMTPV2OnChain.h'

  #name: NativeWitnessSigOnchainLib
  #description: Bindings to `ios/Classes/witnesscalc_credentialAtomicQuerySigV2OnChain.h`.
  #output: 'lib/proof/libs/witnesscalc/sig_v2_onchain/native_witness_sig_v2_onchain.dart'
  #headers:
  #  entry-points:
  #    - 'ios/Classes/witnesscalc_credentialAtomicQuerySigV2OnChain.h'


        # name: ProverLib
        # description: Bindings to `ios/Classes/prover.h`.
        # output: 'lib/libs/generated_bindings_prover.dart'
        # headers:
        # entry-points:
      # - 'ios/Classes/prover.h'

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  plugin:
    platforms:
      android:
        package: io.iden3.polygonid_flutter_sdk
        pluginClass: PolygonIdSdkPlugin
      ios:
        pluginClass: PolygonIdSdkPlugin

  assets:
    - lib/assets/
  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages
