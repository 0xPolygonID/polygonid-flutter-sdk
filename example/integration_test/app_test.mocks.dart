// Mocks generated by Mockito 5.3.0 from annotations
// in polygonid_flutter_sdk_example/integration_test/app_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk_example/src/data/identitity/data_sources/polygonid_sdk_identity_data_source.dart'
    as _i4;
import 'package:polygonid_flutter_sdk_example/src/domain/identity/repositories/identity_repositories.dart'
    as _i2;
import 'package:polygonid_flutter_sdk_example/src/domain/identity/use_cases/get_identifier_use_case.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IdentityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdentityRepository extends _i1.Mock
    implements _i2.IdentityRepository {
  MockIdentityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> createIdentity({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#createIdentity, [], {#privateKey: privateKey}),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String?> getCurrentIdentifier({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getCurrentIdentifier, [], {#privateKey: privateKey}),
          returnValue: _i3.Future<String?>.value()) as _i3.Future<String?>);
}

/// A class which mocks [PolygonIdSdkIdentityDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPolygonIdSdkIdentityDataSource extends _i1.Mock
    implements _i4.PolygonIdSdkIdentityDataSource {
  MockPolygonIdSdkIdentityDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> createIdentity({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#createIdentity, [], {#privateKey: privateKey}),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String?> getIdentifier() =>
      (super.noSuchMethod(Invocation.method(#getIdentifier, []),
          returnValue: _i3.Future<String?>.value()) as _i3.Future<String?>);
}

/// A class which mocks [GetIdentifierUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetIdentifierUseCase extends _i1.Mock
    implements _i5.GetIdentifierUseCase {
  MockGetIdentifierUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> execute({String? param}) =>
      (super.noSuchMethod(Invocation.method(#execute, [], {#param: param}),
          returnValue: _i3.Future<String?>.value()) as _i3.Future<String?>);
}
