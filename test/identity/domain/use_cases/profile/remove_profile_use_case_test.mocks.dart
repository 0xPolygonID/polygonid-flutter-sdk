// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/identity/domain/use_cases/profile/remove_profile_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/identity/domain/entities/did_entity.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/identity/domain/entities/identity_entity.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/identity/domain/entities/private_identity_entity.dart'
    as _i4;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/get_current_env_did_identifier_use_case.dart'
    as _i9;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/get_did_use_case.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/get_identity_use_case.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/update_identity_use_case.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIdentityEntity_0 extends _i1.SmartFake
    implements _i2.IdentityEntity {
  _FakeIdentityEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDidEntity_1 extends _i1.SmartFake implements _i3.DidEntity {
  _FakeDidEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrivateIdentityEntity_2 extends _i1.SmartFake
    implements _i4.PrivateIdentityEntity {
  _FakePrivateIdentityEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetIdentityUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetIdentityUseCase extends _i1.Mock
    implements _i5.GetIdentityUseCase {
  MockGetIdentityUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.IdentityEntity> execute(
          {required _i5.GetIdentityParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i6.Future<_i2.IdentityEntity>.value(_FakeIdentityEntity_0(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i6.Future<_i2.IdentityEntity>);
}

/// A class which mocks [GetDidUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDidUseCase extends _i1.Mock implements _i7.GetDidUseCase {
  MockGetDidUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.DidEntity> execute({required String? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i6.Future<_i3.DidEntity>.value(_FakeDidEntity_1(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i6.Future<_i3.DidEntity>);
}

/// A class which mocks [UpdateIdentityUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateIdentityUseCase extends _i1.Mock
    implements _i8.UpdateIdentityUseCase {
  MockUpdateIdentityUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.PrivateIdentityEntity> execute(
          {required _i8.UpdateIdentityParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i6.Future<_i4.PrivateIdentityEntity>.value(
            _FakePrivateIdentityEntity_2(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i6.Future<_i4.PrivateIdentityEntity>);
}

/// A class which mocks [GetCurrentEnvDidIdentifierUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentEnvDidIdentifierUseCase extends _i1.Mock
    implements _i9.GetCurrentEnvDidIdentifierUseCase {
  MockGetCurrentEnvDidIdentifierUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> execute(
          {required _i9.GetCurrentEnvDidIdentifierParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
}
