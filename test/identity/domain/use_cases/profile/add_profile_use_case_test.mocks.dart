// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/identity/domain/use_cases/profile/add_profile_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/iden3comm/domain/use_cases/check_profile_and_did_current_env.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/identity/domain/entities/identity_entity.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/identity/domain/entities/private_identity_entity.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/identity/get_identity_use_case.dart'
    as _i4;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/identity/update_identity_use_case.dart'
    as _i6;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/profile/create_profiles_use_case.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/smt/create_identity_state_use_case.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIdentityEntity_0 extends _i1.SmartFake
    implements _i2.IdentityEntity {
  _FakeIdentityEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrivateIdentityEntity_1 extends _i1.SmartFake
    implements _i3.PrivateIdentityEntity {
  _FakePrivateIdentityEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetIdentityUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetIdentityUseCase extends _i1.Mock
    implements _i4.GetIdentityUseCase {
  MockGetIdentityUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.IdentityEntity> execute(
          {required _i4.GetIdentityParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i5.Future<_i2.IdentityEntity>.value(_FakeIdentityEntity_0(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i5.Future<_i2.IdentityEntity>);
}

/// A class which mocks [UpdateIdentityUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateIdentityUseCase extends _i1.Mock
    implements _i6.UpdateIdentityUseCase {
  MockUpdateIdentityUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.PrivateIdentityEntity> execute(
          {required _i6.UpdateIdentityParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i5.Future<_i3.PrivateIdentityEntity>.value(
            _FakePrivateIdentityEntity_1(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i5.Future<_i3.PrivateIdentityEntity>);
}

/// A class which mocks [CheckProfileAndDidCurrentEnvUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckProfileAndDidCurrentEnvUseCase extends _i1.Mock
    implements _i7.CheckProfileAndDidCurrentEnvUseCase {
  MockCheckProfileAndDidCurrentEnvUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> execute(
          {required _i7.CheckProfileAndDidCurrentEnvParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CreateProfilesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateProfilesUseCase extends _i1.Mock
    implements _i8.CreateProfilesUseCase {
  MockCreateProfilesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<Map<int, String>> execute(
          {required _i8.CreateProfilesParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i5.Future<Map<int, String>>.value(<int, String>{}),
      ) as _i5.Future<Map<int, String>>);
}

/// A class which mocks [CreateIdentityStateUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateIdentityStateUseCase extends _i1.Mock
    implements _i9.CreateIdentityStateUseCase {
  MockCreateIdentityStateUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> execute({required _i9.CreateIdentityStateParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
