// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/data/repositories/credential_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/common/domain/entities/filter_entity.dart'
    as _i20;
import 'package:polygonid_flutter_sdk/credential/data/data_sources/remote_claim_data_source.dart'
    as _i10;
import 'package:polygonid_flutter_sdk/credential/data/data_sources/storage_claim_data_source.dart'
    as _i15;
import 'package:polygonid_flutter_sdk/credential/data/dtos/claim_dto.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/credential/data/dtos/credential_dto.dart'
    as _i13;
import 'package:polygonid_flutter_sdk/credential/data/dtos/credential_fetch_request.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/credential/data/dtos/revocation_status.dart'
    as _i12;
import 'package:polygonid_flutter_sdk/credential/data/mappers/claim_mapper.dart'
    as _i18;
import 'package:polygonid_flutter_sdk/credential/data/mappers/credential_request_mapper.dart'
    as _i16;
import 'package:polygonid_flutter_sdk/credential/data/mappers/filters_mapper.dart'
    as _i19;
import 'package:polygonid_flutter_sdk/credential/data/mappers/id_filter_mapper.dart'
    as _i21;
import 'package:polygonid_flutter_sdk/credential/domain/entities/claim_entity.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/credential/domain/entities/credential_request_entity.dart'
    as _i17;
import 'package:polygonid_flutter_sdk/identity/data/data_sources/remote_identity_data_source.dart'
    as _i14;
import 'package:polygonid_flutter_sdk/identity/data/dtos/rhs_node_dto.dart'
    as _i6;
import 'package:polygonid_flutter_sdk/identity/libs/iden3core/iden3core.dart'
    as _i5;
import 'package:sembast/sembast.dart' as _i9;
import 'package:web3dart/web3dart.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClaimDTO_1 extends _i1.SmartFake implements _i3.ClaimDTO {
  _FakeClaimDTO_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeb3Client_2 extends _i1.SmartFake implements _i4.Web3Client {
  _FakeWeb3Client_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIden3CoreLib_3 extends _i1.SmartFake implements _i5.Iden3CoreLib {
  _FakeIden3CoreLib_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRhsNodeDTO_4 extends _i1.SmartFake implements _i6.RhsNodeDTO {
  _FakeRhsNodeDTO_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCredentialFetchRequest_5 extends _i1.SmartFake
    implements _i7.CredentialFetchRequest {
  _FakeCredentialFetchRequest_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClaimEntity_6 extends _i1.SmartFake implements _i8.ClaimEntity {
  _FakeClaimEntity_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFilter_7 extends _i1.SmartFake implements _i9.Filter {
  _FakeFilter_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteClaimDataSource extends _i1.Mock
    implements _i10.RemoteClaimDataSource {
  MockRemoteClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i11.Future<_i3.ClaimDTO> fetchClaim({
    required String? token,
    required String? url,
    required String? identifier,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchClaim,
          [],
          {
            #token: token,
            #url: url,
            #identifier: identifier,
          },
        ),
        returnValue: _i11.Future<_i3.ClaimDTO>.value(_FakeClaimDTO_1(
          this,
          Invocation.method(
            #fetchClaim,
            [],
            {
              #token: token,
              #url: url,
              #identifier: identifier,
            },
          ),
        )),
      ) as _i11.Future<_i3.ClaimDTO>);
  @override
  _i11.Future<Map<String, dynamic>?> fetchSchema({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchema,
          [],
          {#url: url},
        ),
        returnValue: _i11.Future<Map<String, dynamic>?>.value(),
      ) as _i11.Future<Map<String, dynamic>?>);
  @override
  _i11.Future<Map<String, dynamic>?> fetchVocab({
    required Map<String, dynamic>? schema,
    required String? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVocab,
          [],
          {
            #schema: schema,
            #type: type,
          },
        ),
        returnValue: _i11.Future<Map<String, dynamic>?>.value(),
      ) as _i11.Future<Map<String, dynamic>?>);
  @override
  _i11.Future<_i12.RevocationStatus?> getClaimRevocationStatus(
    _i13.CredentialDTO? credential,
    _i14.RemoteIdentityDataSource? _remoteIdentityDataSource, {
    bool? useRhs = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClaimRevocationStatus,
          [
            credential,
            _remoteIdentityDataSource,
          ],
          {#useRhs: useRhs},
        ),
        returnValue: _i11.Future<_i12.RevocationStatus?>.value(),
      ) as _i11.Future<_i12.RevocationStatus?>);
}

/// A class which mocks [StorageClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageClaimDataSource extends _i1.Mock
    implements _i15.StorageClaimDataSource {
  MockStorageClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<void> storeClaims({required List<_i3.ClaimDTO>? claims}) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeClaims,
          [],
          {#claims: claims},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> storeClaimsTransact({
    required _i9.DatabaseClient? transaction,
    required List<_i3.ClaimDTO>? claims,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeClaimsTransact,
          [],
          {
            #transaction: transaction,
            #claims: claims,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeClaims({required List<String>? ids}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeClaims,
          [],
          {#ids: ids},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeClaimsTransact({
    required _i9.DatabaseClient? transaction,
    required List<String>? ids,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeClaimsTransact,
          [],
          {
            #transaction: transaction,
            #ids: ids,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<List<_i3.ClaimDTO>> getClaims({_i9.Filter? filter}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClaims,
          [],
          {#filter: filter},
        ),
        returnValue: _i11.Future<List<_i3.ClaimDTO>>.value(<_i3.ClaimDTO>[]),
      ) as _i11.Future<List<_i3.ClaimDTO>>);
}

/// A class which mocks [RemoteIdentityDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteIdentityDataSource extends _i1.Mock
    implements _i14.RemoteIdentityDataSource {
  MockRemoteIdentityDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i4.Web3Client get web3Client => (super.noSuchMethod(
        Invocation.getter(#web3Client),
        returnValue: _FakeWeb3Client_2(
          this,
          Invocation.getter(#web3Client),
        ),
      ) as _i4.Web3Client);
  @override
  _i5.Iden3CoreLib get iden3CoreLib => (super.noSuchMethod(
        Invocation.getter(#iden3CoreLib),
        returnValue: _FakeIden3CoreLib_3(
          this,
          Invocation.getter(#iden3CoreLib),
        ),
      ) as _i5.Iden3CoreLib);
  @override
  _i11.Future<String> fetchIdentityState({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchIdentityState,
          [],
          {#id: id},
        ),
        returnValue: _i11.Future<String>.value(''),
      ) as _i11.Future<String>);
  @override
  _i11.Future<_i6.RhsNodeDTO> fetchStateRoots({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchStateRoots,
          [],
          {#url: url},
        ),
        returnValue: _i11.Future<_i6.RhsNodeDTO>.value(_FakeRhsNodeDTO_4(
          this,
          Invocation.method(
            #fetchStateRoots,
            [],
            {#url: url},
          ),
        )),
      ) as _i11.Future<_i6.RhsNodeDTO>);
  @override
  _i11.Future<Map<String, dynamic>> nonRevProof(
    int? revNonce,
    String? id,
    String? rhsBaseUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #nonRevProof,
          [
            revNonce,
            id,
            rhsBaseUrl,
          ],
        ),
        returnValue:
            _i11.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i11.Future<Map<String, dynamic>>);
}

/// A class which mocks [CredentialRequestMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCredentialRequestMapper extends _i1.Mock
    implements _i16.CredentialRequestMapper {
  MockCredentialRequestMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.CredentialFetchRequest mapTo(_i17.CredentialRequestEntity? to) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapTo,
          [to],
        ),
        returnValue: _FakeCredentialFetchRequest_5(
          this,
          Invocation.method(
            #mapTo,
            [to],
          ),
        ),
      ) as _i7.CredentialFetchRequest);
}

/// A class which mocks [ClaimMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockClaimMapper extends _i1.Mock implements _i18.ClaimMapper {
  MockClaimMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ClaimEntity mapFrom(_i3.ClaimDTO? from) => (super.noSuchMethod(
        Invocation.method(
          #mapFrom,
          [from],
        ),
        returnValue: _FakeClaimEntity_6(
          this,
          Invocation.method(
            #mapFrom,
            [from],
          ),
        ),
      ) as _i8.ClaimEntity);
  @override
  _i3.ClaimDTO mapTo(_i8.ClaimEntity? to) => (super.noSuchMethod(
        Invocation.method(
          #mapTo,
          [to],
        ),
        returnValue: _FakeClaimDTO_1(
          this,
          Invocation.method(
            #mapTo,
            [to],
          ),
        ),
      ) as _i3.ClaimDTO);
}

/// A class which mocks [FiltersMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiltersMapper extends _i1.Mock implements _i19.FiltersMapper {
  MockFiltersMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Filter mapTo(List<_i20.FilterEntity>? to) => (super.noSuchMethod(
        Invocation.method(
          #mapTo,
          [to],
        ),
        returnValue: _FakeFilter_7(
          this,
          Invocation.method(
            #mapTo,
            [to],
          ),
        ),
      ) as _i9.Filter);
}

/// A class which mocks [IdFilterMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdFilterMapper extends _i1.Mock implements _i21.IdFilterMapper {
  MockIdFilterMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Filter mapTo(String? to) => (super.noSuchMethod(
        Invocation.method(
          #mapTo,
          [to],
        ),
        returnValue: _FakeFilter_7(
          this,
          Invocation.method(
            #mapTo,
            [to],
          ),
        ),
      ) as _i9.Filter);
}
