// Mocks generated by Mockito 5.2.0 from annotations
// in polygonid_flutter_sdk/test/data/repositories/credential_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/data/credential/data_sources/remote_claim_data_source.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/data/credential/data_sources/storage_claim_data_source.dart'
    as _i9;
import 'package:polygonid_flutter_sdk/data/credential/dtos/claim_dto.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/data/credential/dtos/credential_fetch_request.dart'
    as _i4;
import 'package:polygonid_flutter_sdk/data/credential/mappers/claim_mapper.dart'
    as _i12;
import 'package:polygonid_flutter_sdk/data/credential/mappers/credential_request_mapper.dart'
    as _i10;
import 'package:polygonid_flutter_sdk/data/credential/mappers/filters_mapper.dart'
    as _i13;
import 'package:polygonid_flutter_sdk/domain/common/entities/filter_entity.dart'
    as _i14;
import 'package:polygonid_flutter_sdk/domain/credential/entities/claim_entity.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/domain/credential/entities/credential_request_entity.dart'
    as _i11;
import 'package:sembast/sembast.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeClaimDTO_1 extends _i1.Fake implements _i3.ClaimDTO {}

class _FakeCredentialFetchRequest_2 extends _i1.Fake
    implements _i4.CredentialFetchRequest {}

class _FakeClaimEntity_3 extends _i1.Fake implements _i5.ClaimEntity {}

class _FakeFilter_4 extends _i1.Fake implements _i6.Filter {}

/// A class which mocks [RemoteClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteClaimDataSource extends _i1.Mock
    implements _i7.RemoteClaimDataSource {
  MockRemoteClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i8.Future<_i3.ClaimDTO> fetchClaim(
          {String? token, String? url, String? identifier}) =>
      (super.noSuchMethod(
              Invocation.method(#fetchClaim, [],
                  {#token: token, #url: url, #identifier: identifier}),
              returnValue: Future<_i3.ClaimDTO>.value(_FakeClaimDTO_1()))
          as _i8.Future<_i3.ClaimDTO>);
}

/// A class which mocks [StorageClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageClaimDataSource extends _i1.Mock
    implements _i9.StorageClaimDataSource {
  MockStorageClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> storeClaims({List<_i3.ClaimDTO>? claims}) => (super
      .noSuchMethod(Invocation.method(#storeClaims, [], {#claims: claims}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> storeClaimsTransact(
          {_i6.DatabaseClient? transaction, List<_i3.ClaimDTO>? claims}) =>
      (super.noSuchMethod(
          Invocation.method(#storeClaimsTransact, [],
              {#transaction: transaction, #claims: claims}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> removeClaims({List<String>? ids}) =>
      (super.noSuchMethod(Invocation.method(#removeClaims, [], {#ids: ids}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> removeClaimsTransact(
          {_i6.DatabaseClient? transaction, List<String>? ids}) =>
      (super.noSuchMethod(
          Invocation.method(#removeClaimsTransact, [],
              {#transaction: transaction, #ids: ids}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<List<_i3.ClaimDTO>> getClaims({_i6.Filter? filter}) =>
      (super.noSuchMethod(Invocation.method(#getClaims, [], {#filter: filter}),
              returnValue: Future<List<_i3.ClaimDTO>>.value(<_i3.ClaimDTO>[]))
          as _i8.Future<List<_i3.ClaimDTO>>);
}

/// A class which mocks [CredentialRequestMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCredentialRequestMapper extends _i1.Mock
    implements _i10.CredentialRequestMapper {
  MockCredentialRequestMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.CredentialFetchRequest mapTo(_i11.CredentialRequestEntity? to) =>
      (super.noSuchMethod(Invocation.method(#mapTo, [to]),
              returnValue: _FakeCredentialFetchRequest_2())
          as _i4.CredentialFetchRequest);
}

/// A class which mocks [ClaimMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockClaimMapper extends _i1.Mock implements _i12.ClaimMapper {
  MockClaimMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ClaimEntity mapFrom(_i3.ClaimDTO? from) =>
      (super.noSuchMethod(Invocation.method(#mapFrom, [from]),
          returnValue: _FakeClaimEntity_3()) as _i5.ClaimEntity);
  @override
  _i3.ClaimDTO mapTo(_i5.ClaimEntity? to) =>
      (super.noSuchMethod(Invocation.method(#mapTo, [to]),
          returnValue: _FakeClaimDTO_1()) as _i3.ClaimDTO);
}

/// A class which mocks [FiltersMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiltersMapper extends _i1.Mock implements _i13.FiltersMapper {
  MockFiltersMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Filter mapTo(List<_i14.FilterEntity>? to) =>
      (super.noSuchMethod(Invocation.method(#mapTo, [to]),
          returnValue: _FakeFilter_4()) as _i6.Filter);
}
