// Mocks generated by Mockito 5.3.0 from annotations
// in polygonid_flutter_sdk/test/data/repositories/iden3comm_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:typed_data' as _i12;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/common/domain/entities/filter_entity.dart'
    as _i19;
import 'package:polygonid_flutter_sdk/credential/data/data_sources/storage_claim_data_source.dart'
    as _i21;
import 'package:polygonid_flutter_sdk/credential/data/dtos/claim_dto.dart'
    as _i6;
import 'package:polygonid_flutter_sdk/credential/data/dtos/credential_dto.dart'
    as _i28;
import 'package:polygonid_flutter_sdk/credential/data/mappers/claim_mapper.dart'
    as _i22;
import 'package:polygonid_flutter_sdk/credential/data/mappers/filters_mapper.dart'
    as _i23;
import 'package:polygonid_flutter_sdk/credential/domain/entities/claim_entity.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/credential/domain/entities/credential_request_entity.dart'
    as _i30;
import 'package:polygonid_flutter_sdk/credential/domain/repositories/credential_repository.dart'
    as _i29;
import 'package:polygonid_flutter_sdk/iden3comm/data/data_sources/proof_scope_data_source.dart'
    as _i17;
import 'package:polygonid_flutter_sdk/iden3comm/data/data_sources/remote_iden3comm_data_source.dart'
    as _i13;
import 'package:polygonid_flutter_sdk/iden3comm/data/dtos/request/auth/auth_request.dart'
    as _i4;
import 'package:polygonid_flutter_sdk/iden3comm/data/dtos/request/auth/proof_scope_request.dart'
    as _i18;
import 'package:polygonid_flutter_sdk/iden3comm/data/dtos/request/auth/proof_scope_rules_query_request.dart'
    as _i20;
import 'package:polygonid_flutter_sdk/iden3comm/data/dtos/response/auth/auth_response.dart'
    as _i25;
import 'package:polygonid_flutter_sdk/identity/data/data_sources/jwz_data_source.dart'
    as _i14;
import 'package:polygonid_flutter_sdk/identity/data/data_sources/wallet_data_source.dart'
    as _i10;
import 'package:polygonid_flutter_sdk/identity/data/mappers/auth_request_mapper.dart'
    as _i16;
import 'package:polygonid_flutter_sdk/identity/data/mappers/auth_response_mapper.dart'
    as _i24;
import 'package:polygonid_flutter_sdk/identity/data/mappers/hex_mapper.dart'
    as _i15;
import 'package:polygonid_flutter_sdk/identity/domain/entities/identity_entity.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/identity/domain/repositories/identity_repository.dart'
    as _i26;
import 'package:polygonid_flutter_sdk/identity/libs/bjj/privadoid_wallet.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/proof_generation/domain/entities/circuit_data_entity.dart'
    as _i9;
import 'package:polygonid_flutter_sdk/proof_generation/domain/repositories/proof_repository.dart'
    as _i27;
import 'package:sembast/sembast.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePrivadoIdWallet_0 extends _i1.SmartFake
    implements _i2.PrivadoIdWallet {
  _FakePrivadoIdWallet_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_2 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAuthRequest_3 extends _i1.SmartFake implements _i4.AuthRequest {
  _FakeAuthRequest_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeClaimEntity_4 extends _i1.SmartFake implements _i5.ClaimEntity {
  _FakeClaimEntity_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeClaimDTO_5 extends _i1.SmartFake implements _i6.ClaimDTO {
  _FakeClaimDTO_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFilter_6 extends _i1.SmartFake implements _i7.Filter {
  _FakeFilter_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIdentityEntity_7 extends _i1.SmartFake
    implements _i8.IdentityEntity {
  _FakeIdentityEntity_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCircuitDataEntity_8 extends _i1.SmartFake
    implements _i9.CircuitDataEntity {
  _FakeCircuitDataEntity_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [WalletDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletDataSource extends _i1.Mock implements _i10.WalletDataSource {
  MockWalletDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i2.PrivadoIdWallet> createWallet({_i12.Uint8List? privateKey}) =>
      (super.noSuchMethod(
              Invocation.method(#createWallet, [], {#privateKey: privateKey}),
              returnValue: _i11.Future<_i2.PrivadoIdWallet>.value(
                  _FakePrivadoIdWallet_0(
                      this,
                      Invocation.method(
                          #createWallet, [], {#privateKey: privateKey}))))
          as _i11.Future<_i2.PrivadoIdWallet>);
  @override
  _i11.Future<String> signMessage(
          {_i12.Uint8List? privateKey, String? message}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signMessage, [], {#privateKey: privateKey, #message: message}),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
}

/// A class which mocks [RemoteIden3commDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteIden3commDataSource extends _i1.Mock
    implements _i13.RemoteIden3commDataSource {
  MockRemoteIden3commDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client => (super.noSuchMethod(Invocation.getter(#client),
          returnValue: _FakeClient_1(this, Invocation.getter(#client)))
      as _i3.Client);
  @override
  _i11.Future<_i3.Response> authWithToken(
          String? token, _i4.AuthRequest? request) =>
      (super.noSuchMethod(Invocation.method(#authWithToken, [token, request]),
              returnValue: _i11.Future<_i3.Response>.value(_FakeResponse_2(
                  this, Invocation.method(#authWithToken, [token, request]))))
          as _i11.Future<_i3.Response>);
  @override
  void throwExceptionOnStatusCode(int? statusCode, String? responseBody) =>
      super.noSuchMethod(
          Invocation.method(
              #throwExceptionOnStatusCode, [statusCode, responseBody]),
          returnValueForMissingStub: null);
}

/// A class which mocks [JWZDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockJWZDataSource extends _i1.Mock implements _i14.JWZDataSource {
  MockJWZDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<String> getAuthToken(
          {_i12.Uint8List? privateKey,
          String? authClaim,
          String? message,
          String? circuitId,
          _i12.Uint8List? datFile,
          _i12.Uint8List? zKeyFile}) =>
      (super.noSuchMethod(
          Invocation.method(#getAuthToken, [], {
            #privateKey: privateKey,
            #authClaim: authClaim,
            #message: message,
            #circuitId: circuitId,
            #datFile: datFile,
            #zKeyFile: zKeyFile
          }),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
}

/// A class which mocks [HexMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockHexMapper extends _i1.Mock implements _i15.HexMapper {
  MockHexMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String mapFrom(_i12.Uint8List? from) =>
      (super.noSuchMethod(Invocation.method(#mapFrom, [from]), returnValue: '')
          as String);
  @override
  _i12.Uint8List mapTo(String? to) =>
      (super.noSuchMethod(Invocation.method(#mapTo, [to]),
          returnValue: _i12.Uint8List(0)) as _i12.Uint8List);
}

/// A class which mocks [AuthRequestMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRequestMapper extends _i1.Mock implements _i16.AuthRequestMapper {
  MockAuthRequestMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRequest mapFrom(String? from) =>
      (super.noSuchMethod(Invocation.method(#mapFrom, [from]),
              returnValue:
                  _FakeAuthRequest_3(this, Invocation.method(#mapFrom, [from])))
          as _i4.AuthRequest);
}

/// A class which mocks [ProofScopeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProofScopeDataSource extends _i1.Mock
    implements _i17.ProofScopeDataSource {
  MockProofScopeDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i18.ProofScopeRequest> filteredProofScopeRequestList(
          List<_i18.ProofScopeRequest>? proofScopeRequestList) =>
      (super.noSuchMethod(
              Invocation.method(
                  #filteredProofScopeRequestList, [proofScopeRequestList]),
              returnValue: <_i18.ProofScopeRequest>[])
          as List<_i18.ProofScopeRequest>);
  @override
  List<_i19.FilterEntity> proofScopeRulesQueryRequestFilters(
          _i20.ProofScopeRulesQueryRequest? proofScopeRulesQueryRequest) =>
      (super.noSuchMethod(
          Invocation.method(#proofScopeRulesQueryRequestFilters,
              [proofScopeRulesQueryRequest]),
          returnValue: <_i19.FilterEntity>[]) as List<_i19.FilterEntity>);
  @override
  Map<String, dynamic> getFieldOperatorAndValues(
          _i18.ProofScopeRequest? scopeRequest) =>
      (super.noSuchMethod(
          Invocation.method(#getFieldOperatorAndValues, [scopeRequest]),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [StorageClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageClaimDataSource extends _i1.Mock
    implements _i21.StorageClaimDataSource {
  MockStorageClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<void> storeClaims({List<_i6.ClaimDTO>? claims}) => (super
          .noSuchMethod(Invocation.method(#storeClaims, [], {#claims: claims}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
      as _i11.Future<void>);
  @override
  _i11.Future<void> storeClaimsTransact(
          {_i7.DatabaseClient? transaction, List<_i6.ClaimDTO>? claims}) =>
      (super.noSuchMethod(
              Invocation.method(#storeClaimsTransact, [],
                  {#transaction: transaction, #claims: claims}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeClaims({List<String>? ids}) =>
      (super.noSuchMethod(Invocation.method(#removeClaims, [], {#ids: ids}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeClaimsTransact(
          {_i7.DatabaseClient? transaction, List<String>? ids}) =>
      (super.noSuchMethod(
              Invocation.method(#removeClaimsTransact, [],
                  {#transaction: transaction, #ids: ids}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<List<_i6.ClaimDTO>> getClaims({_i7.Filter? filter}) =>
      (super.noSuchMethod(Invocation.method(#getClaims, [], {#filter: filter}),
              returnValue:
                  _i11.Future<List<_i6.ClaimDTO>>.value(<_i6.ClaimDTO>[]))
          as _i11.Future<List<_i6.ClaimDTO>>);
}

/// A class which mocks [ClaimMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockClaimMapper extends _i1.Mock implements _i22.ClaimMapper {
  MockClaimMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ClaimEntity mapFrom(_i6.ClaimDTO? from) =>
      (super.noSuchMethod(Invocation.method(#mapFrom, [from]),
              returnValue:
                  _FakeClaimEntity_4(this, Invocation.method(#mapFrom, [from])))
          as _i5.ClaimEntity);
  @override
  _i6.ClaimDTO mapTo(_i5.ClaimEntity? to) => (super.noSuchMethod(
          Invocation.method(#mapTo, [to]),
          returnValue: _FakeClaimDTO_5(this, Invocation.method(#mapTo, [to])))
      as _i6.ClaimDTO);
}

/// A class which mocks [FiltersMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiltersMapper extends _i1.Mock implements _i23.FiltersMapper {
  MockFiltersMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Filter mapTo(List<_i19.FilterEntity>? to) =>
      (super.noSuchMethod(Invocation.method(#mapTo, [to]),
              returnValue: _FakeFilter_6(this, Invocation.method(#mapTo, [to])))
          as _i7.Filter);
}

/// A class which mocks [AuthResponseMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthResponseMapper extends _i1.Mock
    implements _i24.AuthResponseMapper {
  MockAuthResponseMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String mapFrom(_i25.AuthResponse? from) =>
      (super.noSuchMethod(Invocation.method(#mapFrom, [from]), returnValue: '')
          as String);
}

/// A class which mocks [IdentityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdentityRepository extends _i1.Mock
    implements _i26.IdentityRepository {
  MockIdentityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<String> createIdentity({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#createIdentity, [], {#privateKey: privateKey}),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
  @override
  _i11.Future<_i8.IdentityEntity> getIdentityFromKey({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#getIdentityFromKey, [], {#privateKey: privateKey}),
          returnValue: _i11.Future<_i8.IdentityEntity>.value(
              _FakeIdentityEntity_7(
                  this,
                  Invocation.method(#getIdentityFromKey, [], {
                    #privateKey: privateKey
                  })))) as _i11.Future<_i8.IdentityEntity>);
  @override
  _i11.Future<String> getIdentifier({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#getIdentifier, [], {#privateKey: privateKey}),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
  @override
  _i11.Future<_i8.IdentityEntity> getIdentity({String? identifier}) =>
      (super.noSuchMethod(
              Invocation.method(#getIdentity, [], {#identifier: identifier}),
              returnValue: _i11.Future<_i8.IdentityEntity>.value(
                  _FakeIdentityEntity_7(
                      this,
                      Invocation.method(
                          #getIdentity, [], {#identifier: identifier}))))
          as _i11.Future<_i8.IdentityEntity>);
  @override
  _i11.Future<void> removeIdentity({String? identifier}) => (super.noSuchMethod(
          Invocation.method(#removeIdentity, [], {#identifier: identifier}),
          returnValue: _i11.Future<void>.value(),
          returnValueForMissingStub: _i11.Future<void>.value())
      as _i11.Future<void>);
  @override
  _i11.Future<String> signMessage({String? identifier, String? message}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signMessage, [], {#identifier: identifier, #message: message}),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
  @override
  _i11.Future<String?> getCurrentIdentifier() =>
      (super.noSuchMethod(Invocation.method(#getCurrentIdentifier, []),
          returnValue: _i11.Future<String?>.value()) as _i11.Future<String?>);
}

/// A class which mocks [ProofRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProofRepository extends _i1.Mock implements _i27.ProofRepository {
  MockProofRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i9.CircuitDataEntity> loadCircuitFiles(String? circuitId) =>
      (super.noSuchMethod(Invocation.method(#loadCircuitFiles, [circuitId]),
              returnValue: _i11.Future<_i9.CircuitDataEntity>.value(
                  _FakeCircuitDataEntity_8(
                      this, Invocation.method(#loadCircuitFiles, [circuitId]))))
          as _i11.Future<_i9.CircuitDataEntity>);
  @override
  _i11.Future<_i12.Uint8List?> calculateAtomicQueryInputs(
          String? challenge,
          _i28.CredentialDTO? credential,
          String? circuitId,
          String? key,
          List<int>? values,
          int? operator,
          String? pubX,
          String? pubY,
          String? signature) =>
      (super.noSuchMethod(
              Invocation.method(#calculateAtomicQueryInputs, [
                challenge,
                credential,
                circuitId,
                key,
                values,
                operator,
                pubX,
                pubY,
                signature
              ]),
              returnValue: _i11.Future<_i12.Uint8List?>.value())
          as _i11.Future<_i12.Uint8List?>);
  @override
  _i11.Future<_i12.Uint8List?> calculateWitness(
          _i9.CircuitDataEntity? circuitData,
          _i12.Uint8List? atomicQueryInputs) =>
      (super.noSuchMethod(
              Invocation.method(
                  #calculateWitness, [circuitData, atomicQueryInputs]),
              returnValue: _i11.Future<_i12.Uint8List?>.value())
          as _i11.Future<_i12.Uint8List?>);
  @override
  _i11.Future<Map<String, dynamic>?> prove(
          _i9.CircuitDataEntity? circuitData, _i12.Uint8List? wtnsBytes) =>
      (super.noSuchMethod(Invocation.method(#prove, [circuitData, wtnsBytes]),
              returnValue: _i11.Future<Map<String, dynamic>?>.value())
          as _i11.Future<Map<String, dynamic>?>);
}

/// A class which mocks [CredentialRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCredentialRepository extends _i1.Mock
    implements _i29.CredentialRepository {
  MockCredentialRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i5.ClaimEntity> fetchClaim(
          {String? identifier,
          String? token,
          _i30.CredentialRequestEntity? credentialRequest}) =>
      (super
          .noSuchMethod(Invocation.method(#fetchClaim, [], {#identifier: identifier, #token: token, #credentialRequest: credentialRequest}),
              returnValue: _i11.Future<_i5.ClaimEntity>.value(_FakeClaimEntity_4(
                  this,
                  Invocation.method(#fetchClaim, [], {
                    #identifier: identifier,
                    #token: token,
                    #credentialRequest: credentialRequest
                  })))) as _i11.Future<_i5.ClaimEntity>);
  @override
  _i11.Future<String> getFetchMessage(
          {_i30.CredentialRequestEntity? credentialRequest}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getFetchMessage, [], {#credentialRequest: credentialRequest}),
          returnValue: _i11.Future<String>.value('')) as _i11.Future<String>);
  @override
  _i11.Future<void> saveClaims({List<_i5.ClaimEntity>? claims}) =>
      (super.noSuchMethod(Invocation.method(#saveClaims, [], {#claims: claims}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<List<_i5.ClaimEntity>> getClaims(
          {List<_i19.FilterEntity>? filters}) =>
      (super.noSuchMethod(
              Invocation.method(#getClaims, [], {#filters: filters}),
              returnValue:
                  _i11.Future<List<_i5.ClaimEntity>>.value(<_i5.ClaimEntity>[]))
          as _i11.Future<List<_i5.ClaimEntity>>);
  @override
  _i11.Future<_i5.ClaimEntity> getClaim({String? id}) => (super.noSuchMethod(
          Invocation.method(#getClaim, [], {#id: id}),
          returnValue: _i11.Future<_i5.ClaimEntity>.value(_FakeClaimEntity_4(
              this, Invocation.method(#getClaim, [], {#id: id}))))
      as _i11.Future<_i5.ClaimEntity>);
  @override
  _i11.Future<void> removeClaims({List<String>? ids}) =>
      (super.noSuchMethod(Invocation.method(#removeClaims, [], {#ids: ids}),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<_i5.ClaimEntity> updateClaim({_i5.ClaimEntity? claim}) =>
      (super.noSuchMethod(Invocation.method(#updateClaim, [], {#claim: claim}),
          returnValue: _i11.Future<_i5.ClaimEntity>.value(_FakeClaimEntity_4(
              this,
              Invocation.method(#updateClaim, [], {#claim: claim})))) as _i11
          .Future<_i5.ClaimEntity>);
  @override
  _i11.Future<Map<String, dynamic>?> fetchSchema({String? url}) =>
      (super.noSuchMethod(Invocation.method(#fetchSchema, [], {#url: url}),
              returnValue: _i11.Future<Map<String, dynamic>?>.value())
          as _i11.Future<Map<String, dynamic>?>);
  @override
  _i11.Future<Map<String, dynamic>?> fetchVocab(
          {Map<String, dynamic>? schema, String? type}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchVocab, [], {#schema: schema, #type: type}),
          returnValue:
              _i11.Future<Map<String, dynamic>?>.value()) as _i11
          .Future<Map<String, dynamic>?>);
}
