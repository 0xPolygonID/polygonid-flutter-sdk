// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/data/repositories/iden3comm_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/credential/data/data_sources/storage_claim_data_source.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/credential/data/dtos/claim_dto.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/iden3comm/data/data_sources/remote_iden3comm_data_source.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/iden3comm/data/dtos/response/auth/auth_response.dart'
    as _i11;
import 'package:polygonid_flutter_sdk/iden3comm/data/mappers/auth_response_mapper.dart'
    as _i10;
import 'package:polygonid_flutter_sdk/identity/data/mappers/hex_mapper.dart'
    as _i5;
import 'package:sembast/sembast.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteIden3commDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteIden3commDataSource extends _i1.Mock
    implements _i3.RemoteIden3commDataSource {
  MockRemoteIden3commDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i4.Future<_i2.Response> authWithToken({
    required String? token,
    required String? url,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authWithToken,
          [],
          {
            #token: token,
            #url: url,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #authWithToken,
            [],
            {
              #token: token,
              #url: url,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);
  @override
  void throwExceptionOnStatusCode(
    int? statusCode,
    String? responseBody,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #throwExceptionOnStatusCode,
          [
            statusCode,
            responseBody,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HexMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockHexMapper extends _i1.Mock implements _i5.HexMapper {
  MockHexMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String mapFrom(_i6.Uint8List? from) => (super.noSuchMethod(
        Invocation.method(
          #mapFrom,
          [from],
        ),
        returnValue: '',
      ) as String);
  @override
  _i6.Uint8List mapTo(String? to) => (super.noSuchMethod(
        Invocation.method(
          #mapTo,
          [to],
        ),
        returnValue: _i6.Uint8List(0),
      ) as _i6.Uint8List);
}

/// A class which mocks [StorageClaimDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageClaimDataSource extends _i1.Mock
    implements _i7.StorageClaimDataSource {
  MockStorageClaimDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> storeClaims({
    required List<_i8.ClaimDTO>? claims,
    required String? did,
    required String? privateKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeClaims,
          [],
          {
            #claims: claims,
            #did: did,
            #privateKey: privateKey,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> storeClaimsTransact({
    required _i9.DatabaseClient? transaction,
    required List<_i8.ClaimDTO>? claims,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeClaimsTransact,
          [],
          {
            #transaction: transaction,
            #claims: claims,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> removeClaims({
    required List<String>? claimIds,
    required String? did,
    required String? privateKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeClaims,
          [],
          {
            #claimIds: claimIds,
            #did: did,
            #privateKey: privateKey,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> removeClaimsTransact({
    required _i9.DatabaseClient? transaction,
    required List<String>? claimIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeClaimsTransact,
          [],
          {
            #transaction: transaction,
            #claimIds: claimIds,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i8.ClaimDTO>> getClaims({
    _i9.Filter? filter,
    required String? did,
    required String? privateKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClaims,
          [],
          {
            #filter: filter,
            #did: did,
            #privateKey: privateKey,
          },
        ),
        returnValue: _i4.Future<List<_i8.ClaimDTO>>.value(<_i8.ClaimDTO>[]),
      ) as _i4.Future<List<_i8.ClaimDTO>>);
  @override
  _i4.Future<Map<String, Object?>> getClaimsDb({
    required String? did,
    required String? privateKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClaimsDb,
          [],
          {
            #did: did,
            #privateKey: privateKey,
          },
        ),
        returnValue:
            _i4.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i4.Future<Map<String, Object?>>);
  @override
  _i4.Future<void> saveClaimsDb({
    required Map<String, Object?>? exportableDb,
    required _i9.DatabaseFactory? databaseFactory,
    required String? destinationPath,
    required String? privateKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveClaimsDb,
          [],
          {
            #exportableDb: exportableDb,
            #databaseFactory: databaseFactory,
            #destinationPath: destinationPath,
            #privateKey: privateKey,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AuthResponseMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthResponseMapper extends _i1.Mock
    implements _i10.AuthResponseMapper {
  MockAuthResponseMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String mapFrom(_i11.AuthResponse? from) => (super.noSuchMethod(
        Invocation.method(
          #mapFrom,
          [from],
        ),
        returnValue: '',
      ) as String);
}
