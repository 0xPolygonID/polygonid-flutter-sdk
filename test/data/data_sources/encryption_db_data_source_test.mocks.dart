// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/data/data_sources/encryption_db_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:encrypt/encrypt.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAlgorithm_0 extends _i1.SmartFake implements _i2.Algorithm {
  _FakeAlgorithm_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEncrypted_1 extends _i1.SmartFake implements _i2.Encrypted {
  _FakeEncrypted_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Encrypter].
///
/// See the documentation for Mockito's code generation for more information.
class MockEncrypter extends _i1.Mock implements _i2.Encrypter {
  MockEncrypter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Algorithm get algo => (super.noSuchMethod(
        Invocation.getter(#algo),
        returnValue: _FakeAlgorithm_0(
          this,
          Invocation.getter(#algo),
        ),
      ) as _i2.Algorithm);
  @override
  _i2.Encrypted encryptBytes(
    List<int>? input, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #encryptBytes,
          [input],
          {#iv: iv},
        ),
        returnValue: _FakeEncrypted_1(
          this,
          Invocation.method(
            #encryptBytes,
            [input],
            {#iv: iv},
          ),
        ),
      ) as _i2.Encrypted);
  @override
  _i2.Encrypted encrypt(
    String? input, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #encrypt,
          [input],
          {#iv: iv},
        ),
        returnValue: _FakeEncrypted_1(
          this,
          Invocation.method(
            #encrypt,
            [input],
            {#iv: iv},
          ),
        ),
      ) as _i2.Encrypted);
  @override
  List<int> decryptBytes(
    _i2.Encrypted? encrypted, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decryptBytes,
          [encrypted],
          {#iv: iv},
        ),
        returnValue: <int>[],
      ) as List<int>);
  @override
  String decrypt(
    _i2.Encrypted? encrypted, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrypt,
          [encrypted],
          {#iv: iv},
        ),
        returnValue: '',
      ) as String);
  @override
  String decrypt16(
    String? encoded, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrypt16,
          [encoded],
          {#iv: iv},
        ),
        returnValue: '',
      ) as String);
  @override
  String decrypt64(
    String? encoded, {
    _i2.IV? iv,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrypt64,
          [encoded],
          {#iv: iv},
        ),
        returnValue: '',
      ) as String);
}
