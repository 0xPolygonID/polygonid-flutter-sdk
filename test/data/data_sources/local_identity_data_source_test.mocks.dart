// Mocks generated by Mockito 5.2.0 from annotations
// in polygonid_flutter_sdk/test/data/data_sources/local_identity_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:typed_data' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/data/identity/data_sources/local_identity_data_source.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/libs/iden3corelib.dart' as _i3;
import 'package:polygonid_flutter_sdk/model/credential_credential.dart' as _i4;
import 'package:polygonid_flutter_sdk/model/revocation_status.dart' as _i5;
import 'package:polygonid_flutter_sdk/privadoid_wallet.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePrivadoIdWallet_0 extends _i1.Fake implements _i2.PrivadoIdWallet {}

/// A class which mocks [Iden3CoreLib].
///
/// See the documentation for Mockito's code generation for more information.
class MockIden3CoreLib extends _i1.Mock implements _i3.Iden3CoreLib {
  MockIden3CoreLib() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getGenesisId(String? idenState) =>
      (super.noSuchMethod(Invocation.method(#getGenesisId, [idenState]),
          returnValue: '') as String);
  @override
  Map<String, String> generateIdentity(String? pubX, String? pubY) =>
      (super.noSuchMethod(Invocation.method(#generateIdentity, [pubX, pubY]),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  String getMerkleTreeRoot(String? pubX, String? pubY) =>
      (super.noSuchMethod(Invocation.method(#getMerkleTreeRoot, [pubX, pubY]),
          returnValue: '') as String);
  @override
  int claimTreeEntryHash() =>
      (super.noSuchMethod(Invocation.method(#claimTreeEntryHash, []),
          returnValue: 0) as int);
  @override
  String getAuthClaim(String? pubX, dynamic pubY) =>
      (super.noSuchMethod(Invocation.method(#getAuthClaim, [pubX, pubY]),
          returnValue: '') as String);
  @override
  String prepareAuthInputs(String? challenge, String? authClaim, String? pubX,
          String? pubY, String? signature) =>
      (super.noSuchMethod(
          Invocation.method(#prepareAuthInputs,
              [challenge, authClaim, pubX, pubY, signature]),
          returnValue: '') as String);
  @override
  String prepareAtomicQueryMTPInputs(
          String? challenge,
          String? pubX,
          String? pubY,
          String? signature,
          _i4.CredentialCredential? credential,
          String? jsonLDDocument,
          String? schema,
          String? claimType,
          String? key,
          List<int>? values,
          int? operator,
          _i5.RevocationStatus? revocationStatus) =>
      (super.noSuchMethod(
          Invocation.method(#prepareAtomicQueryMTPInputs, [
            challenge,
            pubX,
            pubY,
            signature,
            credential,
            jsonLDDocument,
            schema,
            claimType,
            key,
            values,
            operator,
            revocationStatus
          ]),
          returnValue: '') as String);
  @override
  String prepareAtomicQuerySigInputs(
          String? challenge,
          String? pubX,
          String? pubY,
          String? signature,
          _i4.CredentialCredential? credential,
          String? jsonLDDocument,
          String? schema,
          String? claimType,
          String? key,
          List<int>? values,
          int? operator,
          _i5.RevocationStatus? revocationStatus,
          _i5.RevocationStatus? authRevocationStatus) =>
      (super.noSuchMethod(
          Invocation.method(#prepareAtomicQuerySigInputs, [
            challenge,
            pubX,
            pubY,
            signature,
            credential,
            jsonLDDocument,
            schema,
            claimType,
            key,
            values,
            operator,
            revocationStatus,
            authRevocationStatus
          ]),
          returnValue: '') as String);
  @override
  _i6.Future<_i7.Uint8List?> calculateWitness(
          _i7.Uint8List? wasmBytes, _i7.Uint8List? inputsJsonBytes) =>
      (super.noSuchMethod(
          Invocation.method(#calculateWitness, [wasmBytes, inputsJsonBytes]),
          returnValue:
              Future<_i7.Uint8List?>.value()) as _i6.Future<_i7.Uint8List?>);
  @override
  _i6.Future<_i7.Uint8List?> calculateWitnessSig(
          _i7.Uint8List? wasmBytes, _i7.Uint8List? inputsJsonBytes) =>
      (super.noSuchMethod(
          Invocation.method(#calculateWitnessSig, [wasmBytes, inputsJsonBytes]),
          returnValue:
              Future<_i7.Uint8List?>.value()) as _i6.Future<_i7.Uint8List?>);
  @override
  _i6.Future<_i7.Uint8List?> calculateWitnessMtp(
          _i7.Uint8List? wasmBytes, _i7.Uint8List? inputsJsonBytes) =>
      (super.noSuchMethod(
          Invocation.method(#calculateWitnessMtp, [wasmBytes, inputsJsonBytes]),
          returnValue:
              Future<_i7.Uint8List?>.value()) as _i6.Future<_i7.Uint8List?>);
  @override
  _i6.Future<Map<String, dynamic>?> prove(
          _i7.Uint8List? zkeyBytes, _i7.Uint8List? wtnsBytes) =>
      (super.noSuchMethod(Invocation.method(#prove, [zkeyBytes, wtnsBytes]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i7.Uint8List hexToBytesOrZero(String? s) =>
      (super.noSuchMethod(Invocation.method(#hexToBytesOrZero, [s]),
          returnValue: _i7.Uint8List(0)) as _i7.Uint8List);
  @override
  _i6.Future<Map<String, dynamic>?> calculateProof(
          _i7.Uint8List? inputsJsonBytes,
          _i7.Uint8List? zkeyBytes,
          _i7.Uint8List? datBytes) =>
      (super.noSuchMethod(
              Invocation.method(
                  #calculateProof, [inputsJsonBytes, zkeyBytes, datBytes]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
}

/// A class which mocks [WalletLibWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletLibWrapper extends _i1.Mock implements _i8.WalletLibWrapper {
  MockWalletLibWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.PrivadoIdWallet> createWallet({_i7.Uint8List? privateKey}) =>
      (super.noSuchMethod(
              Invocation.method(#createWallet, [], {#privateKey: privateKey}),
              returnValue:
                  Future<_i2.PrivadoIdWallet>.value(_FakePrivadoIdWallet_0()))
          as _i6.Future<_i2.PrivadoIdWallet>);
  @override
  _i6.Future<String> signMessage(
          {_i7.Uint8List? privateKey, String? message}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signMessage, [], {#privateKey: privateKey, #message: message}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
}
