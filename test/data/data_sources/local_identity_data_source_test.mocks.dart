// Mocks generated by Mockito 5.2.0 from annotations
// in privadoid_sdk/test/data/data_sources/local_identity_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:typed_data' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:privadoid_sdk/data/data_sources/local_identity_data_source.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LibWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLibWrapper extends _i1.Mock implements _i2.LibWrapper {
  MockLibWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Uint8List> generatePrivateKey({_i4.Uint8List? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#generatePrivateKey, [], {#privateKey: privateKey}),
          returnValue:
              Future<_i4.Uint8List>.value(_i4.Uint8List(0))) as _i3
          .Future<_i4.Uint8List>);
  @override
  _i3.Future<String> generateIdentifier({String? privateKey}) =>
      (super.noSuchMethod(
          Invocation.method(#generateIdentifier, [], {#privateKey: privateKey}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
}
