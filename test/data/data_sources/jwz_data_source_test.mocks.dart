// Mocks generated by Mockito 5.2.0 from annotations
// in polygonid_flutter_sdk/test/data/data_sources/jwz_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/data/identity/data_sources/jwz_data_source.dart'
    as _i6;
import 'package:polygonid_flutter_sdk/data/identity/data_sources/wallet_data_source.dart'
    as _i3;
import 'package:polygonid_flutter_sdk/privadoid_wallet.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePrivadoIdWallet_0 extends _i1.Fake implements _i2.PrivadoIdWallet {}

/// A class which mocks [WalletDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletDataSource extends _i1.Mock implements _i3.WalletDataSource {
  MockWalletDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PrivadoIdWallet> createWallet({_i5.Uint8List? privateKey}) =>
      (super.noSuchMethod(
              Invocation.method(#createWallet, [], {#privateKey: privateKey}),
              returnValue:
                  Future<_i2.PrivadoIdWallet>.value(_FakePrivadoIdWallet_0()))
          as _i4.Future<_i2.PrivadoIdWallet>);
  @override
  _i4.Future<String> signMessage(
          {_i5.Uint8List? privateKey, String? message}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signMessage, [], {#privateKey: privateKey, #message: message}),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
}

/// A class which mocks [JWZIsolatesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockJWZIsolatesWrapper extends _i1.Mock
    implements _i6.JWZIsolatesWrapper {
  MockJWZIsolatesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> computeAuthInputs(String? challenge, String? authClaim,
          String? pubX, String? pubY, String? signature) =>
      (super.noSuchMethod(
          Invocation.method(#computeAuthInputs,
              [challenge, authClaim, pubX, pubY, signature]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<Map<String, dynamic>?> computeCalculateProof(_i5.Uint8List? inputs,
          _i5.Uint8List? provingKey, _i5.Uint8List? wasm) =>
      (super.noSuchMethod(
          Invocation.method(#computeCalculateProof, [inputs, provingKey, wasm]),
          returnValue:
              Future<Map<String, dynamic>?>.value()) as _i4
          .Future<Map<String, dynamic>?>);
}
