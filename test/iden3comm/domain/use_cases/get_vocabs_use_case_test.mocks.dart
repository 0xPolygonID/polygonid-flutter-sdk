// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/iden3comm/domain/use_cases/get_vocabs_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/credential/domain/use_cases/fetch_schema_use_case.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/credential/domain/use_cases/fetch_vocab_use_case.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FetchSchemaUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchSchemaUseCase extends _i1.Mock
    implements _i2.FetchSchemaUseCase {
  MockFetchSchemaUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> execute({required String? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [FetchVocabUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchVocabUseCase extends _i1.Mock implements _i4.FetchVocabUseCase {
  MockFetchVocabUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> execute(
          {required _i4.FetchVocabParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}
