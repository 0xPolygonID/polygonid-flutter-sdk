// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/iden3comm/domain/use_cases/check_profile_and_did_current_env_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/common/domain/entities/env_entity.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/common/domain/use_cases/get_env_use_case.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/get_did_identifier_use_case.dart'
    as _i6;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/profile/check_profile_validity_use_case.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEnvEntity_0 extends _i1.SmartFake implements _i2.EnvEntity {
  _FakeEnvEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CheckProfileValidityUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckProfileValidityUseCase extends _i1.Mock
    implements _i3.CheckProfileValidityUseCase {
  MockCheckProfileValidityUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> execute({required _i3.CheckProfileValidityParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [GetEnvUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnvUseCase extends _i1.Mock implements _i5.GetEnvUseCase {
  MockGetEnvUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.EnvEntity> execute({dynamic param}) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i4.Future<_i2.EnvEntity>.value(_FakeEnvEntity_0(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i4.Future<_i2.EnvEntity>);
}

/// A class which mocks [GetDidIdentifierUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDidIdentifierUseCase extends _i1.Mock
    implements _i6.GetDidIdentifierUseCase {
  MockGetDidIdentifierUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> execute({required _i6.GetDidIdentifierParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
}
