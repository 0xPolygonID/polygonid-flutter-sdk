// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/iden3comm/domain/use_cases/get_proof_requests_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/iden3comm/domain/entities/proof_request_entity.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/iden3comm/domain/entities/request/auth/proof_scope_request.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/iden3comm/domain/use_cases/get_proof_query_use_case.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProofQueryParamEntity_0 extends _i1.SmartFake
    implements _i2.ProofQueryParamEntity {
  _FakeProofQueryParamEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetProofQueryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProofQueryUseCase extends _i1.Mock
    implements _i3.GetProofQueryUseCase {
  MockGetProofQueryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ProofQueryParamEntity> execute(
          {required _i5.ProofScopeRequest? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i4.Future<_i2.ProofQueryParamEntity>.value(
            _FakeProofQueryParamEntity_0(
          this,
          Invocation.method(
            #execute,
            [],
            {#param: param},
          ),
        )),
      ) as _i4.Future<_i2.ProofQueryParamEntity>);
}
