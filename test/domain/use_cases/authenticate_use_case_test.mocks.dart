// Mocks generated by Mockito 5.3.2 from annotations
// in polygonid_flutter_sdk/test/domain/use_cases/authenticate_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:polygonid_flutter_sdk/common/domain/use_cases/get_config_use_case.dart'
    as _i10;
import 'package:polygonid_flutter_sdk/common/domain/use_cases/get_package_name_use_case.dart'
    as _i11;
import 'package:polygonid_flutter_sdk/iden3comm/domain/entities/proof_entity.dart'
    as _i7;
import 'package:polygonid_flutter_sdk/iden3comm/domain/entities/request/auth/auth_request.dart'
    as _i4;
import 'package:polygonid_flutter_sdk/iden3comm/domain/repositories/iden3comm_repository.dart'
    as _i2;
import 'package:polygonid_flutter_sdk/iden3comm/domain/use_cases/get_auth_token_use_case.dart'
    as _i9;
import 'package:polygonid_flutter_sdk/iden3comm/domain/use_cases/get_proofs_use_case.dart'
    as _i8;
import 'package:polygonid_flutter_sdk/identity/domain/entities/private_identity_entity.dart'
    as _i5;
import 'package:polygonid_flutter_sdk/identity/domain/use_cases/get_did_identifier_use_case.dart'
    as _i12;
import 'package:polygonid_flutter_sdk/proof_generation/domain/entities/circuit_data_entity.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Iden3commRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIden3commRepository extends _i1.Mock
    implements _i2.Iden3commRepository {
  MockIden3commRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> authenticate({
    required _i4.AuthRequest? request,
    required String? authToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
          {
            #request: request,
            #authToken: authToken,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<String> getAuthToken({
    required _i5.PrivateIdentityEntity? identity,
    required String? message,
    required _i6.CircuitDataEntity? authData,
    required String? authClaim,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuthToken,
          [],
          {
            #identity: identity,
            #message: message,
            #authData: authData,
            #authClaim: authClaim,
          },
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  _i3.Future<String> getAuthResponse({
    required String? identifier,
    required _i4.AuthRequest? request,
    required List<_i7.ProofEntity>? scope,
    String? pushUrl,
    String? pushToken,
    String? didIdentifier,
    String? packageName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuthResponse,
          [],
          {
            #identifier: identifier,
            #request: request,
            #scope: scope,
            #pushUrl: pushUrl,
            #pushToken: pushToken,
            #didIdentifier: didIdentifier,
            #packageName: packageName,
          },
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [GetProofsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProofsUseCase extends _i1.Mock implements _i8.GetProofsUseCase {
  MockGetProofsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i7.ProofEntity>> execute(
          {required _i8.GetProofsParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue:
            _i3.Future<List<_i7.ProofEntity>>.value(<_i7.ProofEntity>[]),
      ) as _i3.Future<List<_i7.ProofEntity>>);
}

/// A class which mocks [GetAuthTokenUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAuthTokenUseCase extends _i1.Mock
    implements _i9.GetAuthTokenUseCase {
  MockGetAuthTokenUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> execute({required _i9.GetAuthTokenParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [GetEnvConfigUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnvConfigUseCase extends _i1.Mock
    implements _i10.GetEnvConfigUseCase {
  MockGetEnvConfigUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> execute({required _i10.PolygonIdConfig? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [GetPackageNameUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPackageNameUseCase extends _i1.Mock
    implements _i11.GetPackageNameUseCase {
  MockGetPackageNameUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> execute({dynamic param}) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [GetDidIdentifierUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDidIdentifierUseCase extends _i1.Mock
    implements _i12.GetDidIdentifierUseCase {
  MockGetDidIdentifierUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> execute({required _i12.GetDidIdentifierParam? param}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#param: param},
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
