apply from: 'sdk.properties'

group 'io.github.0xpolygonid.polygonid_flutter_sdk'
version sdkVersion

buildscript {
    ext.kotlin_version = '1.8.0'
    repositories {
        google()
        maven { url "https://jitpack.io" }
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        maven { url "https://jitpack.io" }
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
// apply plugin: 'signing'

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.jniLibs.srcDirs += 'src/main/jniLibs'
    }

    defaultConfig {
        minSdkVersion 21
        ndk {
            // TODO: armeabi-v7a and x86 not supported yet
            abiFilters 'arm64-v8a', 'x86_64'  /*,'armeabi-v7a', 'x86',*/
        }
    }

    /*externalNativeBuild {
        ndkBuild {
            path "jni/Android.mk"
        }
    }*/

    lintOptions {
        disable 'InvalidPackage'
    }
    buildTypes {
        debug {
            //minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            //minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        profile {
            initWith debug
        }
    }

//    signing {
//        sign configurations.archives
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.a'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.annotation:annotation:1.6.0'
}

// Maven
publishing {
    publications {
        sdkDebug(MavenPublication) {
            groupId = 'io.github.0xpolygonid.polygonid_flutter_sdk'
            artifactId = 'polygonid_flutter_sdk_debug'
            version = version

            pom {
                name = 'PolygonID Flutter SDK'
                description = 'The Flutter SDK for PolygonID.'
                url = 'https://polygon.technology/polygon-id'

                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'http://www.apache.org/licenses/'
                    }
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/'
                    }
                }

                developers {
                    developer {
                        name = 'Flavien Norindr'
                        email = 'id@polygon.technology'
                        organization = 'Polygon'
                        organizationUrl = 'https://polygon.technology'
                    }
                    developer {
                        name = 'Emanuel Muroni'
                        email = 'id@polygon.technology'
                        organization = 'Polygon'
                        organizationUrl = 'https://polygon.technology'
                    }
                    developer {
                        name = 'Raùl Jareño'
                        email = 'id@polygon.technology'
                        organization = 'Polygon'
                        organizationUrl = 'https://polygon.technology'
                    }
                }

                scm {
                    connection = 'scm:git@github.com:0xPolygonID/polygonid-flutter-sdk.git'
                    developerConnection = 'scm:git@github.com:0xPolygonID/polygonid-flutter-sdk.git'
                    url = 'https://github.com/0xPolygonID/polygonid-flutter-sdk'
                }
            }

            afterEvaluate {
                from components.debug
            }
        }
    }
}
